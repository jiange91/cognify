fig, ax = plt.subplots(1, 3, figsize=(13, 3))

hqa_methods = ["Original", "Original", "DSPy", "Trace", "Cognify", "Cognify", "Cognify"]
hqa_quality = [0.22, 0.298, 0.49, 0.16, 0.62, 0.59, 0.51]
hqa_latency = [4, 3.39, 6.2, 4, 5.38, 4.88, 3.37]

tsql_methods = ["Original", "Original", "DSPy", "Cognify", "Cognify"]
tsql_quality = [0.492, 0.59, 0.51, 0.61, 0.59]
tsql_latency = [87.3, 85.21, 57.9, 86, 53]

dviz_methods = ["Original", "Original", "DSPy", "Trace", "Cognify", "Cognify", "Cognify"]
dviz_quality = [0.41, 0.59, 0.47, 0.452, 0.61, 0.52, 0.47]
dviz_latency = [44.6, 54.2, 56, 31.4, 72.4, 37.1, 32.9]

finr_methods = ["Original", "Cognify", "Cognify"]
finr_quality = [0.546, 0.65, 0.617]
finr_latency = [5.62, 3.21, 2.06]

heval_methods = ["Original", "Original", "DSPy", "Trace", "Cognify", "Cognify", "Cognify"]
heval_quality = [0.81, 0.702, 0.87, 0.87, 0.91, 0.83, 0.84]
heval_latency = [0.15, 2.58, 0.56, 0.45, 0.79, 0.13, 0.3]

sorting_methods = ["Trace", "Cognify", "Cognify"]
sorting_quality = [0.89, 0.99, 0.75]
sorting_latency = [2.41, 4.94, 0.11]

counting_methods = ["Trace", "DSPy", "Cognify", "Cognify"]
counting_quality = [0.87, 0.42, 0.95, 0.93]
counting_latency = [1.71, 1.6, 3.37, 0.21]

plot_in_grid(ax[0], hqa_quality, hqa_latency, hqa_methods, "HotpotQA", "F1 Score")
plot_in_grid(ax[1], tsql_quality, tsql_latency, tsql_methods, "Text-2-SQL", "Pass Rate")
plot_in_grid(ax[2], dviz_quality, dviz_latency, dviz_methods, "Data Visualization", "LLM-as-a-Judge")
plot_in_grid(ax[3], finr_quality, finr_latency, finr_methods, "FinRobot", "F1 & LLM-as-a-Judge")

# plot_in_grid(ax[1, 0], heval_quality, heval_latency, heval_methods, "HumanEval", "Pass Rate")
# plot_in_grid(ax[1, 1], counting_quality, counting_latency, counting_methods, "BBH-Counting", "Exact Match Rate")
# plot_in_grid(ax[1, 2], sorting_quality, sorting_latency, sorting_methods, "BBH-Sorting", "Exact Match Rate")


ax[0].set_xlabel("Latency (second)", fontsize=13)
ax[1].set_xlabel("Latency (second)", fontsize=13)
ax[2].set_xlabel("Latency (second)", fontsize=13)


lines, labels = ax[0].get_legend_handles_labels()
unique_labels = dict(zip(labels, lines))
# fig.align_ylabels(ax[:, 0])  # Align labels only in the leftmost column

# Add a single legend to the top of the figure
fig.legend(unique_labels.values(), unique_labels.keys(), loc='upper center', ncol=4, bbox_to_anchor=(0.5, 1.1), fontsize=12)
plt.tight_layout()
fig.savefig('big_grid.pdf', bbox_inches='tight')